<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xhua.dao.RssNewsMapper" >
  <resultMap id="BaseResultMap" type="com.xhua.model.RssNews" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="source_id" property="sourceId" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="published_date" property="publishedDate" jdbcType="VARCHAR" />
    <result column="link" property="link" jdbcType="VARCHAR" />
    <result column="get_time" property="getTime" jdbcType="BIGINT" />
    <result column="get_url" property="getUrl" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xhua.model.RssNews" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, source_id, type_id, title, author, published_date, link, get_time, get_url
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xhua.model.RssNewsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from rss_news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xhua.model.RssNewsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rss_news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from rss_news
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from rss_news
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xhua.model.RssNewsExample" >
    delete from rss_news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xhua.model.RssNews" >
    insert into rss_news (id, source_id, type_id, 
      title, author, published_date, 
      link, get_time, get_url, 
      content)
    values (#{id,jdbcType=INTEGER}, #{sourceId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{publishedDate,jdbcType=VARCHAR}, 
      #{link,jdbcType=VARCHAR}, #{getTime,jdbcType=BIGINT}, #{getUrl,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xhua.model.RssNews" >
    insert into rss_news
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sourceId != null" >
        source_id,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="publishedDate != null" >
        published_date,
      </if>
      <if test="link != null" >
        link,
      </if>
      <if test="getTime != null" >
        get_time,
      </if>
      <if test="getUrl != null" >
        get_url,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null" >
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="publishedDate != null" >
        #{publishedDate,jdbcType=VARCHAR},
      </if>
      <if test="link != null" >
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="getTime != null" >
        #{getTime,jdbcType=BIGINT},
      </if>
      <if test="getUrl != null" >
        #{getUrl,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xhua.model.RssNewsExample" resultType="java.lang.Integer" >
    select count(*) from rss_news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update rss_news
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sourceId != null" >
        source_id = #{record.sourceId,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.publishedDate != null" >
        published_date = #{record.publishedDate,jdbcType=VARCHAR},
      </if>
      <if test="record.link != null" >
        link = #{record.link,jdbcType=VARCHAR},
      </if>
      <if test="record.getTime != null" >
        get_time = #{record.getTime,jdbcType=BIGINT},
      </if>
      <if test="record.getUrl != null" >
        get_url = #{record.getUrl,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update rss_news
    set id = #{record.id,jdbcType=INTEGER},
      source_id = #{record.sourceId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      published_date = #{record.publishedDate,jdbcType=VARCHAR},
      link = #{record.link,jdbcType=VARCHAR},
      get_time = #{record.getTime,jdbcType=BIGINT},
      get_url = #{record.getUrl,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update rss_news
    set id = #{record.id,jdbcType=INTEGER},
      source_id = #{record.sourceId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      published_date = #{record.publishedDate,jdbcType=VARCHAR},
      link = #{record.link,jdbcType=VARCHAR},
      get_time = #{record.getTime,jdbcType=BIGINT},
      get_url = #{record.getUrl,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xhua.model.RssNews" >
    update rss_news
    <set >
      <if test="sourceId != null" >
        source_id = #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="publishedDate != null" >
        published_date = #{publishedDate,jdbcType=VARCHAR},
      </if>
      <if test="link != null" >
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="getTime != null" >
        get_time = #{getTime,jdbcType=BIGINT},
      </if>
      <if test="getUrl != null" >
        get_url = #{getUrl,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xhua.model.RssNews" >
    update rss_news
    set source_id = #{sourceId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      published_date = #{publishedDate,jdbcType=VARCHAR},
      link = #{link,jdbcType=VARCHAR},
      get_time = #{getTime,jdbcType=BIGINT},
      get_url = #{getUrl,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xhua.model.RssNews" >
    update rss_news
    set source_id = #{sourceId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      published_date = #{publishedDate,jdbcType=VARCHAR},
      link = #{link,jdbcType=VARCHAR},
      get_time = #{getTime,jdbcType=BIGINT},
      get_url = #{getUrl,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>